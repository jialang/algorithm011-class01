#In a rotated list, use binary search to find where the rotate starts
#使用二分查找，寻找一个半有序数组 [4, 5, 6, 7, 0, 1, 2] 中间无序的地方
def findR(nums):
    if nums[0] < nums[-1]:
        return -1
    left, right = 0, len(nums)-1
    while nums[left] > nums[right]:
        mid = (left+right) // 2
        if nums[mid] < nums[right]:
            right = mid
        else:
            left = mid + 1
    return left
